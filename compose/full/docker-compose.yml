version: '3.5'
services:
  redis_back_db:
    image: redis:6.2
    container_name: redis_back-docker
    volumes:
      - ./store/redis/:/data:rw
      - ../redis.conf:/usr/local/etc/redis/redis.conf
      - ./store/redis/logs:/logs:rw

    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "127.0.0.1:6479:6479"

  luojia_waf:
    container_name: luojia_waf-docker        # 指定容器的名称
    build:
      context: ../../
      dockerfile: compose/django/Dockerfile
    command:
      - sh
      - -c
      - |
        nohup python ./reload.py uw/monitor python ./task_main.py &
        uwsgi --ini uwsgi.ini
        /bin/bash -c " while true; do sleep 1; done"
    # command: uwsgi --ini uwsgi.ini
        # python manage.py runserver 0:6988
    environment:
      TZ : 'Asia/Shanghai'
    volumes:
      - ../../:/app:rw
    restart: always
  
  nginx_web:
    container_name: nginx_web-docker        # 指定容器的名称
    image: nginx
    ports:
      - "6987:6987"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/nginx.conf:ro
      - ../../../luojia_web_publish:/app:rw
    depends_on:
      - luojia_waf      
    restart: always

networks:
  default:
    external:
      name: my-server-network

# docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker stop
# docker ps -a | grep "Exited" | awk '{print $1 }'|xargs docker rm
# docker images|grep none|awk '{print $3 }'|xargs docker rmi

# docker rmi $(docker images -q | awk '/^<none>/ { print $3 }')


# docker exec -it django_my_tool-docker /bin/bash